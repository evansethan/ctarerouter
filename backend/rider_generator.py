# -*- coding: utf-8 -*-
"""rider_generator.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RO90Hd72xn2a7IUET_Ldhj0QBBDKJ8NU
"""

import pandas as pd
import numpy as np
import random
from datetime import datetime, timedelta


TOTAL_RIDERS = 2664500
DATE = datetime.now().date()

# timeslots proportion
TIME_PERIODS = [
    ("06:00", "09:00", 0.35),
    ("09:00", "16:00", 0.30),
    ("16:00", "19:00", 0.25),
    ("19:00", "24:00", 0.10)
]

STATIONS_FILE = '/mnt/data/stations_ridership.csv'
OUTPUT_FILE = '/mnt/data/riders_simulation.csv'

# --------------------------------------

def generate_departure_time():
    period = random.choices(TIME_PERIODS, weights=[p[2] for p in TIME_PERIODS], k=1)[0]
    start_time = datetime.strptime(period[0], "%H:%M")
    end_time = datetime.strptime(period[1], "%H:%M")

    if period[1] == "24:00":
        end_time = datetime.strptime("23:59", "%H:%M")  # 处理24:00特殊情况

    time_diff = (end_time - start_time).seconds
    random_seconds = random.randint(0, time_diff)

    departure_datetime = datetime.combine(DATE, start_time.time()) + timedelta(seconds=random_seconds)
    return departure_datetime.strftime("%Y-%m-%d %H:%M:%S")


def generate_riders():
    print("read station ridership...")
    stations = pd.read_csv(STATIONS_FILE)

    # get station name and ridership as weight
    station_names = stations['station_name'].tolist()
    weights = stations['ridership'].tolist()

    # generate into numpy array for proportion
    weights = np.array(weights)
    weights = weights / weights.sum()

    riders = []

    print(f"generate {TOTAL_RIDERS} riders...")

    for _ in range(TOTAL_RIDERS):
        start_station = random.choices(station_names, weights=weights, k=1)[0]
        end_station = start_station

        while end_station == start_station:
            end_station = random.choice(station_names)

        departure_time = generate_departure_time()

        rider = {
            'start_station': start_station,
            'end_station': end_station,
            'departure_time': departure_time
        }

        riders.append(rider)

        if len(riders) % 500000 == 0:
            print(f"已生成 {len(riders)} riders...")

    print("completed，saved in csv...")
    df_riders = pd.DataFrame(riders)
    df_riders.to_csv(OUTPUT_FILE, index=False)
    print(f"saved in {OUTPUT_FILE}")



if __name__ == "__main__":
    generate_riders()